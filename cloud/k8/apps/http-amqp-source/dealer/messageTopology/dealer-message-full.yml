
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: dealer1.sale
spec:
  vhost: "Dealer1"
  name: "dealer1.sale"
  rabbitmqClusterReference:
    name: rabbitmq
#  rabbitmqClusterReference:
#    connectionSecret:
#      name: rabbitmq-dealer1-user # has to an existing secret in the same namespace as this Queue object
---
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: dealer1.repair
spec:
  vhost: "Dealer1"
  name: "dealer1.repair"
  rabbitmqClusterReference:
    name: rabbitmq
#    connectionSecret:
#      name: rabbitmq-dealer1-user # has to an existing secret in the same namespace as this Queue object
---
apiVersion: rabbitmq.com/v1beta1
kind: Exchange
metadata:
  name: dealer1.topic
  namespace: default
spec:
  vhost: "Dealer1"
  name: "dealer1.topic" # name of the exchange
  type: topic # default to 'direct' if not provided; can be set to 'direct', 'fanout', 'headers', and 'topic'
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: rabbitmq
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: dealer1.topic.sale
  namespace: default
spec:
  vhost: "Dealer1"
  source: "dealer1.topic" # an existing exchange
  destination: "dealer1.sale" # an existing queue
  destinationType: "queue" # can be 'queue' or 'exchange'
  routingKey: "workOrder.sale.#"
  rabbitmqClusterReference:
    name: rabbitmq
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: dealer1.topic.repair
  namespace: default
spec:
  vhost: "Dealer1"
  source: "dealer1.topic" # an existing exchange
  destination: "dealer1.repair" # an existing queue
  destinationType: "queue" # can be 'queue' or 'exchange'
  routingKey: "workOrder.repair.#"
  rabbitmqClusterReference:
    name: rabbitmq