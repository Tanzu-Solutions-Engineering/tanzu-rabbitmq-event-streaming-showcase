---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
secrets:
  - name: grafana-admin
  - name: grafana-datasources
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/component: grafana
type: Opaque
data:
  GF_SECURITY_ADMIN_PASSWORD: "Q0hBTkdFTUU="
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-envvars
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/component: grafana
data:
  GF_SECURITY_ADMIN_USER: "admin"
  GF_INSTALL_PLUGINS: ""
  GF_PATHS_PLUGINS: "/opt/bitnami/grafana/data/plugins"
  GF_AUTH_LDAP_ENABLED: "false"
  GF_AUTH_LDAP_CONFIG_FILE: "/opt/bitnami/grafana/conf/ldap.toml"
  GF_AUTH_LDAP_ALLOW_SIGN_UP: "false"
  GF_PATHS_PROVISIONING: "/opt/bitnami/grafana/conf/provisioning"
  GF_PATHS_CONFIG: "/opt/bitnami/grafana/conf/grafana.ini"
  GF_PATHS_DATA: "/opt/bitnami/grafana/data"
  GF_PATHS_LOGS: "/opt/bitnami/grafana/logs"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provider
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/component: grafana
data:
  default-provider.yaml: |-
    apiVersion: 1

    providers:
      # <string> an unique provider name
    - name: 'default-provider'
      # <int> org id. will default to orgId 1 if not specified
      orgId: 1
      # <string, required> name of the dashboard folder. Required
      folder: dashboards
      # <string> folder UID. will be automatically generated if not specified
      folderUid: ''
      # <string, required> provider type. Required
      type: file
      # <bool> disable dashboard deletion
      disableDeletion: false
      # <bool> enable dashboard editing
      editable: true
      # <int> how often Grafana will scan for changed dashboards
      updateIntervalSeconds: 10
      options:
        # <string, required> path to dashboard files on disk. Required
        path: /opt/bitnami/grafana/dashboards
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/component: grafana
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/component: grafana
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: dashboard
      protocol: TCP
      name: http
      nodePort: null
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/component: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/component: grafana
  strategy: 
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/component: grafana
      annotations:
        checksum/secret: f3920e49f571e37e7de80ed8ae91853f245d85ef68dfb998ecabf4d0bc16728d
        checksum/config: 68eca17a15344003d1eb5d4c569c042ea66e553f9296f1ed23bcee9c206e0ed2
        checksum/dashboard-provider: 52ca2dbd4bea92c2f118b2293441374f5dd422a19243fe389d2475458d5e5cac
    spec:
      
      serviceAccountName: grafana
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: true
      containers:
        - name: grafana
          image: docker.io/bitnami/grafana:7.2.1-debian-10-r0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: grafana-envvars
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: GF_SECURITY_ADMIN_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /opt/bitnami/grafana/data
            - name: dashboards-provider
              mountPath: /opt/bitnami/grafana/conf/provisioning/dashboards
            - name: grafana-dashboard-scdf-applications
              mountPath: /opt/bitnami/grafana/dashboards/scdf-applications.json
              subPath: scdf-applications.json
            - name: grafana-dashboard-scdf-streams
              mountPath: /opt/bitnami/grafana/dashboards/scdf-streams.json
              subPath: scdf-streams.json
            - name: grafana-dashboard-scdf-kafka-streams
              mountPath: /opt/bitnami/grafana/dashboards/scdf-kafka-streams.json
              subPath: scdf-kafka-streams.json
            - name: grafana-dashboard-scdf-task-batch
              mountPath: /opt/bitnami/grafana/dashboards/scdf-task-batch.json
              subPath: scdf-task-batch.json
            - name: datasources
              mountPath: /opt/bitnami/grafana/conf/provisioning/datasources
          ports:
            - name: dashboard
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: dashboard
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: dashboard
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: grafana
        - name: dashboards-provider
          configMap:
            name: grafana-provider
        - name: grafana-dashboard-scdf-applications
          configMap:
            name: grafana-dashboard-scdf-applications
        - name: grafana-dashboard-scdf-streams
          configMap:
            name: grafana-dashboard-scdf-streams
        - name: grafana-dashboard-scdf-kafka-streams
          configMap:
            name: grafana-dashboard-scdf-kafka-streams
        - name: grafana-dashboard-scdf-task-batch
          configMap:
            name: grafana-dashboard-scdf-task-batch
        - name: datasources
          secret:
            secretName: grafana-datasources
